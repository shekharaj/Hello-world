using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.SqlClient;
using System.Linq;

namespace DataAnnotationsEg
{
    [Table("Author")]
    class Author
    {
        [Key]
        public int AuthorId { get; set; }

        [MaxLength(15)]
        [Required]
        public string FirstName { get; set; }

        [MaxLength(15),Required]
        public string LastName { get; set; }

        [NotMapped]
        public string FullName
        {
            get { return FirstName + "" + LastName; }
        }

        public List<Book> Books { get; set; }
    }

    [Table("Book")]
    class Book
    {
        [Key,Column(Order =0)]
        public int BookId { get; set; }

        [Column(Order =1)]
        [Required]
        public string BookName { get; set; }

        [Column(Order = 2)]
        [ConcurrencyCheck]
        [Required]
        public double PricePerUnit { get; set; }

        [Column(Order =3)]
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public DateTime CreatedOn { get; set; }

        [Column(Order = 4)]
        [ForeignKey("Author")]
        public int AuthorId { get; set; }

        public Author Author { get; set; }
    }

    [NotMapped]
    class BooksInfo
    {
        [Key]
        public int BookId { get; set; }
        public string BookName { get; set; }
        public string AuthorName { get; set; }
    }

    class Customer
    {
        [Key]
        public int CustomerId { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
    }

    class ShopDbContext:DbContext
    {
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(@"Server=DESKTOP-O84LAFN;Database=EFCoreShopDb;Trusted_Connection=True;");

            //EF 2.1 install the package Microsoft.EntityFrameworkCore.Proxies;
            //optionsBuilder.UseLazyLoadingProxies();

        }
        public DbSet<Author> Authors { get; set; }
        public DbSet<Book> Books { get; set; }
        public DbSet<BooksInfo> BooksInfos { get; set; }
        public DbSet<Customer> Customers { get; set; }
    }

    class Program
    {
        static void Main(string[] args)
        {
            using (var shopDbContext = new ShopDbContext())
            {
                #region Default Transactions In EF
                //Author author1 = new Author() { FirstName = "Mohammed", LastName = "Rafeeq" };
                //shopDbContext.Add<Author>(author1);


                //Author author2 = new Author() { FirstName = "Lilly", LastName = "John" };
                //shopDbContext.Add<Author>(author2);

                //shopDbContext.SaveChanges(); 
                #endregion

                #region Controlling Transactions Manually 
                //using (var MyTransaction=shopDbContext.Database.BeginTransaction())
                //{
                //    try
                //    {
                //        Author author1 = new Author() { FirstName = "Kitty", LastName = "Quie" };
                //        shopDbContext.Add<Author>(author1);
                //        shopDbContext.SaveChanges();


                //        Book book1 = new Book() { BookName = "ASP.Net", PricePerUnit = 7000, AuthorId = author1.AuthorId };
                //        shopDbContext.Add<Book>(book1);
                //        shopDbContext.SaveChanges();

                //        MyTransaction.Commit();
                //    }
                //    catch (Exception E)
                //    {
                //        MyTransaction.Rollback();
                //        Console.WriteLine(E.Message);
                //    } 
                //} 
                #endregion

                Console.ReadLine();
            }
           
        }
    }
}
